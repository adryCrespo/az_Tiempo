name: resourcegroup_deployment
on: 
    push
env:
  SUBSCRIPTION_ID: ${{ secrets.SUBSCRIBE_ID}}
  location: uksouth
  resource-group: az_tiempo 
  ARM_TEMPLATE_CONTAINER: IaC/container_registry.json
  parameter_file_container : IaC/param_container.json

  ARM_TEMPLATE_ACI: IaC/aci.json
  parameter_file_ACI : IaC/param_aci.json
  container_registry : azTiempoCr
  cr_server : azTiempoCr.azurecr.io/az-tiempo


jobs:

    deployment:
        runs-on: ubuntu-latest
    
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
          
          - name: deploy_container_registry
            uses: ./.github/actions/azTemplateP
            with:
              AZURE_CREDENTIALS: ${{secrets.AZURE_CREDENTIALS}}
              SUBSCRIPTION_NAME: ${{secrets.SUBSCRIPTION_NAME}}
              location: ${{env.location}}
              resource_group: ${{env.resource-group}}
              ARM_TEMPLATE: ${{env.ARM_TEMPLATE_CONTAINER}}
              parametros_file: ${{env.parameter_file_container}}
          


          - name : push images to acr
              # ACR_REGISTRY_ID: /subscriptions/946ef4a8-c168-4a2a-9c7a-75a36d891088/resourceGroups/az_tiempo/providers/Microsoft.ContainerRegistry/registries/azTiempoCr
              
            run: |
              # az role assignment create --assignee ${{env.SERVICE_PRINCIPAL_ID}} --scope $ACR_REGISTRY_ID --role acrpush
              # az acr login --name ${{env.container_registry}} 
              docker login myregistry.azurecr.io --username ${{SERVICE_PRINCIPAL_ID}} --password ${{secrets.SP_PASSWD}}
              docker tag az_tiempo-flask-db ${{env.cr_server}}/flask-db
              docker tag az_tiempo-flask-server ${{env.cr_server}}/flask-server
              docker push ${{env.cr_server}}/flask-db
              docker push ${{env.cr_server}}/flask-server
          
          # - name : pss acr
          #   run: |
          #    echo "container_registry_pass=$(az acr credential show --name azTiempoCr --query 'passwords[0].value')" >> "$GITHUB_ENV"



          # - name: deploy aci
          #   run: |
          #     az deployment group  create  --resource-group ${{env.resource-group}}  --template-file ${{env.ARM_TEMPLATE_ACI}} --parameters ${{env.parameter_file_ACI}} --parameters imageRegistryPassword=$container_registry_pass


              #  echo "action_state=yellow" >> "$GITHUB_ENV"

          # - name : pss cri2
          #   run: |
          #    echo "aaa   $cri_pass"

          # - name: arm_template_ACI
          #   uses: ./.github/actions/azTemplateP
          #   with:
          #       AZURE_CREDENTIALS: ${{secrets.AZURE_CREDENTIALS}}
          #       SUBSCRIPTION_NAME: ${{secrets.SUBSCRIPTION_NAME}}
          #       location: ${{env.location}}
          #       resource_group: ${{env.resource-group}}
          #       ARM_TEMPLATE: ${{env.ARM_TEMPLATE_ACI}}
          #       parametros_file: ${{env.parameter_file_ACI}}           